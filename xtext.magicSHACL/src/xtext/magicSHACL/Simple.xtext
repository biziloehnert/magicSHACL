grammar xtext.magicSHACL.Simple with org.eclipse.xtext.common.Terminals

import "http://www.example.org/magicSHACL" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Graph returns Graph:
	{Graph}
	shapesGraph=ShapesGraph
	;
	
ShapesGraph returns ShapesGraph:
	{ShapesGraph}
		(targets+=Target)*
		(shapeConstraints+=ShapeConstraint)*
	;

Target returns Target:
	{Target}
	name=UNICODE '(' term=UNICODE ')' '?'
;

ShapeConstraint returns ShapeConstraint:
	{ShapeConstraint} 
	shapeName=ShapeName ':-' (shapeExpressions+=ShapeExpression) ';'
;

ShapeName returns ShapeName:
	{ShapeName}
	name=UNICODE;

ShapeExpression returns ShapeExpression:
	{ShapeExpression}
	value=UNICODE | (propertyValues+=PropertyValues)
;
	
PropertyValues returns PropertyValues :
	{PropertyValues}
	(values+=Value property=Property values+=Value ('AND' values+=Value)*) | 
	(property=Property values+=Value+)
;

Property returns Property:
	{Property}
	type=PropertyType;
	
Value returns Value:
	{Value}
	name=UNICODE;

enum PropertyType:
	MinCountConstraintComponent='MIN' | 
	MaxCountConstraintComponent='MAX' |
	AndConstraintComponent='AND' | 
	OrConstraintComponent='OR' | 
	NotConstraintComponent='NOT' |
	PredicatePath='SOME ' | 
	InversePath='SOME ^'
;

terminal UNICODE:
        ('a'..'z'|'A'..'Z'|INT|'_'|':'|'#'|'/'|'.'|'-'|'\"'|'{'|'}'|'\\'|'$')*;

EString returns ecore::EString:
	STRING | ID;