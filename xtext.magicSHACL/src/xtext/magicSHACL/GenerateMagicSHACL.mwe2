module xtext.magicSHACL.GenerateMagicSHACL

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.eclipse.emf.mwe.utils.StandaloneSetup


var rootPath = ".."
var runtimeProject = "../xtext.magicSHACL"

Workflow {
	bean = StandaloneSetup {
		scanClassPath = true
		//platformUri = "${runtimeProject}/.."
		registerGeneratedEPackage = "magicSHACL.MagicSHACLPackage"
		registerGenModelFile = "platform:/resource/MagicSHACL/model/magicSHACL.genmodel"
		registerEcoreFile = "platform:/resource/MagicSHACL/model/magicSHACL.ecore"
	} 
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "xtext.magicSHACL"
				rootPath = rootPath
				runtimeTest = {
					enabled = true
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "xtext.magicSHACL.Turtle"
			fileExtensions = "ttl"
			referencedResource = "platform:/resource/MagicSHACL/model/magicSHACL.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
				generateXtendStub = true
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateJavaMain = true
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
		language = StandardLanguage {
			name = "xtext.magicSHACL.Simple"
			fileExtensions = "simple"
			referencedResource = "platform:/resource/MagicSHACL/model/magicSHACL.genmodel"
			
			fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}

			formatter = {
				generateStub = true
				generateXtendStub = true
			}

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
			}
			generator = {
				generateJavaMain = true
				generateXtendStub = true
			}
			junitSupport = {
				junitVersion = "5"
			}
		}
	}
}
